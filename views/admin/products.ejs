<!-- Breadcrumb Section Begin -->

<section class="breadcrumb-option">
    <div class="container">
        <div class="row">
            <div class="col-lg-12">
                <div class="breadcrumb__text">

                    <h2 class="text-center font-weight-bold" style="color: rgba(22, 22, 22, 0.751);">Admin
                        Dashboard
                    </h2>

                </div>
            </div>
        </div>
    </div>
</section>
<section>

    <div class="container mt-5">
        <h2>Product List</h2>
        <table class="table">
            <thead>
                <tr>
                    <th scope="col">Name</th>
                    <th scope="col">Description</th>
                    <th scope="col">Brand</th>
                    <th scope="col">Category</th>
                    <th scope="col">Size</th>
                    <th scope="col">Price</th>
                    <th scope="col">Discount %</th>
                        <th scope="col">Offer Price</th>
                    <th scope="col">Stock</th>
                  
                    <th scope="col">Images</th>
                    <th scope="col">Active</th>
                    <th scope="col">Featured</th>
                    <th scope="col">Offer</th>
                    <th scope="col">Actions</th>
                </tr>
            </thead>
            <tbody>
                <% products.forEach((product)=> { %>
                    <tr>
                        <td>
                            <%= product.name %>
                        </td>
                        <td>
                            <%= product.description %>
                        </td>
                        <% console.log(product); %>
                            <% console.log(brands); %>

                                <td>
                                    <% const matchedBrand=brands.find(brand=> product.brand.toString() ===
                                        brand._id.toString()); %>
                                        <%= matchedBrand ? matchedBrand.name : 'Brand not found' %>
                                </td>

                                <td>
                                    <% const matchedCategory=categorys.find(category=> product.category.toString() ===
                                        category._id.toString()); %>
                                        <%= matchedCategory ? matchedCategory.name : 'Brand not found' %>
                                </td>

                                <td>
                                    <%= product.size %>
                                </td>
                                <td>
                                    <%= product.price %>
                                </td>
                                <td>
                                    <%= product.rateOfDiscount %>
                                </td>
                                <td>
                                    <%= product.offerPrice %>
                                </td>
                                <td>
                                    <%= product.stock %>
                                </td>
                                <td>
                                
                                <div class="card">
                                    <% product.images.forEach(image => { %>
                                        <img src="/upload/products/<%= image %>" alt="Image" style="width: 75px; height: 75px; margin-right: 5px;">
                                    <% }); %>
                                </div>
                            </td>
                                    <td>
                                        <%= product.active? true: false %>
                                    </td>
                                    <td>
                                        <%= product.isFeatured? true:false %>
                                    </td>
                                    <td>
                                        <%= product.onOffer? true:false %>
                                    </td>
                                    <td>
                                        <a href="/admin/edit_product/<%= product._id %>"
                                            class="btn btn-warning btn-sm">Edit</a>
                                        <a href="#" class="btn btn-danger btn-sm"
                                            onclick="deleteProduct('<%= product._id %>')">Delete</a>
                                    </td>
                    </tr>
                    <% }); %>
            </tbody>
        </table>
    </div>

    <ul class="pagination">
        <li id="prevBtn" class="page-item">
        </li>
        <a href="" class="page-link" onclick="prevPage()">Prev</a>
        </li>
        <li id="currentPage" class="page-item active">
            
                <%= currentPage %>
            
        </li>
        
        <li id="nextBtn" class="page-item">
            <a href="" class="page-link" onclick="nextPage()">Next</a>
        </li>
    </ul>

    <script>
          var currentPage = '<%= currentPage %>';
    var totalPage = '<%= totalPage %>'; // Replace with the actual total number of pages

    function prevPage() {
        if (currentPage > 1) {
            currentPage--;
            updatePage();
        }
    }

    function nextPage() {
        if (currentPage < totalPage) {
            currentPage++;
            updatePage();
        }
    }

    function updatePage() {
        var currentPageElement = document.getElementById('currentPage');
        currentPageElement.textContent = currentPage;

        // Highlight the active page
        var paginationItems = document.querySelectorAll('.pagination .page-item');
        paginationItems.forEach(function(item) {
            item.classList.remove('active');
        });
        currentPageElement.parentElement.classList.add('active');

        // Disable Prev/Next buttons based on the current page
        document.getElementById('prevBtn').classList.toggle('disabled', currentPage === 1);
        document.getElementById('nextBtn').classList.toggle('disabled', currentPage === totalPage);

        // Update URL
        var newURL = window.location.pathname + '?page=' + currentPage;
        window.history.pushState({ path: newURL }, '', newURL);

        // Fetch new data or perform other actions based on the currentPage
    }
    </script>
    <script>
        function deleteProduct(productId) {
            if (confirm("Are you sure you want to delete this product ?")) {
                // Make an AJAX request to delete the brand
                fetch(`/admin/delete_product/${productId}`, {
                    method: 'DELETE',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                })
                    .then(response => {
                        if (!response.ok) {
                            throw new Error(`HTTP error! Status: ${response.status}`);
                        }
                        return response.json();
                    })
                    .then(data => {
                        // Handle the response, e.g., update the UI
                        console.log('product deleted successfully:', data);
                        // Reload the page or update the UI as needed
                        window.location.reload(); // Example: Reload the page
                    })
                    .catch(error => {
                        console.error('Error deleting product:', error);
                        // Handle errors, e.g., show an alert
                        alert('Error deleting product. Please try again.');
                    });
            }
        }

    </script>
    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.5.2/dist/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
</section>